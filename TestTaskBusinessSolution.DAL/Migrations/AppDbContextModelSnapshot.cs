// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTaskBusinessSolution.DAL.EF;

#nullable disable

namespace TestTaskBusinessSolution.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Бронза D20",
                            OrderId = 1,
                            Quantity = 200.55m,
                            Unit = "мм"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Алюминий D500",
                            OrderId = 1,
                            Quantity = 0.350m,
                            Unit = "м"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Медь D10 L1000",
                            OrderId = 1,
                            Quantity = 50.00m,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Бронза D45",
                            OrderId = 1,
                            Quantity = 450.80m,
                            Unit = "мм"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Латунь D80",
                            OrderId = 1,
                            Quantity = 10.70m,
                            Unit = "м"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Труба профильная 20х20х1,5",
                            OrderId = 4,
                            Quantity = 500.87m,
                            Unit = "кг"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Труба профильная 25х25х1,5",
                            OrderId = 4,
                            Quantity = 250.00m,
                            Unit = "кг"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Труба профильная 40х60х2",
                            OrderId = 4,
                            Quantity = 0.92m,
                            Unit = "т"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Труба профильная 40х40х1,5",
                            OrderId = 4,
                            Quantity = 2.36m,
                            Unit = "т"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Труба профильная 80х60х2,5",
                            OrderId = 4,
                            Quantity = 10.45m,
                            Unit = "т"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Арматура D10",
                            OrderId = 4,
                            Quantity = 8.25m,
                            Unit = "т"
                        });
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 10, 18, 12, 10, 29, 396, DateTimeKind.Local).AddTicks(325),
                            Number = "TT852431",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 10, 16, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(293),
                            Number = "TT852432",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 9, 23, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(306),
                            Number = "TT852433",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 11, 20, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(307),
                            Number = "TT852434",
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 11, 15, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(308),
                            Number = "TT852435",
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 9, 22, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(309),
                            Number = "TT852436",
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2022, 11, 21, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(311),
                            Number = "TT852437",
                            ProviderId = 4
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2022, 11, 18, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(312),
                            Number = "TT852438",
                            ProviderId = 4
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2022, 11, 23, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(313),
                            Number = "TT852439",
                            ProviderId = 4
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2022, 10, 13, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(314),
                            Number = "TT853437",
                            ProviderId = 5
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2022, 9, 11, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(317),
                            Number = "TT854437",
                            ProviderId = 5
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2022, 11, 23, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(318),
                            Number = "TT855437",
                            ProviderId = 5
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2022, 10, 8, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(319),
                            Number = "TT856437",
                            ProviderId = 5
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2022, 9, 13, 12, 10, 29, 398, DateTimeKind.Local).AddTicks(320),
                            Number = "TT857437",
                            ProviderId = 5
                        });
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Петротех"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Союзметалл"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Вестмет"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Севзапметалл"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Петроснаб"
                        });
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Item", b =>
                {
                    b.HasOne("TestTaskBusinessSolution.DAL.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Order", b =>
                {
                    b.HasOne("TestTaskBusinessSolution.DAL.Entities.Provider", "Provider")
                        .WithMany("Orders")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TestTaskBusinessSolution.DAL.Entities.Provider", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
